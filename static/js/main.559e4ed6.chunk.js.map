{"version":3,"sources":["assets/Img/burger.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Navigation/SideDrawer/SideDrawerToggle/SideDrawerToggle.js","components/Navigation/ToolBar/ToolBar.js","components/layout/Layout.js","components/Burger/BurgerInGredient/BrugerInGredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","Database/axios-orders.js","store/actions/burgerBuilder.js","store/actions/actionType.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/Order.js","store/actions/order.js","containers/Orders/Orders.js","components/Order/CheckoutSummary/CheckOutSummary.js","components/UI/Input/input.js","containers/CheckOut/ContactData/ContactData.js","containers/CheckOut/CheckOut.js","containers/Auth/Auth.js","store/actions/AuthActions.js","App.js","store/reducer/burgerBuilder.js","store/reducer/order.js","store/reducer/reducer.js","index.js"],"names":["module","exports","Logo","height","className","style","to","src","LogoPNG","alt","NavigationItem","children","link","itemStyle","exact","NavigationItems","props","BackDrop","show","exit","onClick","SideDrawer","closed","SideDrawerStyle","SideDrawerToggle","toggle","Toolabr","Layout","state","showSideDrawer","hideSideDrawer","setState","this","Component","BurgerInGredient","ingredient","type","Burger","Slices","Object","keys","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","Label","add","remove","disabled","count","controls","BuildControls","addIngredient","removeIngredient","disabledButtons","price","ingredientCount","purchase","purchasableHandler","renderControl","toFixed","Modal","transform","opacity","Button","value","callBackFunction","btnStyle","Style","OrderSummary","ingredients","continues","ingredientsSammary","index","Spinner","axios","create","baseURL","setIngredients","BurgerBuilder","purchasable","loading","editPurchase","ing","ingredientsValueSum","values","purchasableCancel","purchasableContinue","history","push","pathname","initIngredients","ingredientValuesButtons","OrderSummarys","burger","AddIngredient","TotalPrice","connect","burgerBuilder","dispatch","IngredientsName","builderBurgerActions","get","then","res","data","catch","err","console","log","withRouter","Order","renderIngredients","purchaseBurgerStart","fetchOrderSuccess","id","order","orders","getOrdersToComponent","isGettingOrders","Orders","getOrders","renderOrders","CheckOutSummary","size","obj","hasOwnProperty","ButtonContinue","width","margin","input","inputClass","inValid","isTouched","inputElement","elemntType","name","join","elemntConfig","onChange","e","ContactData","orderForm","placeholder","validation","required","minLenght","maxLenght","valid","touched","street","country","email","formHandler","preventDefault","formData","fetchOrder","checkValidation","rules","isValid","trim","inputHandler","target","specificObj","mainObj","renderInputs","onSubmit","post","orderActions","CheckOut","checkOutSummary","path","match","Auth","isEmal","password","updatecontrols","submitHandler","onAuth","PWD","App","initialState","INGREDIENT_PRICE","SALAD","CHEESE","MEAT","BACON","action","makeOrderToarray","orderArray","orderReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.559e4ed6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger.d36bd09a.png\";","import React from 'react';\r\nimport LogoPNG from '../../assets/Img/burger.png';\r\nimport { Link } from 'react-router-dom'\r\nimport './Logo.css'\r\nconst Logo = ({ height }) => {\r\n    return (\r\n        <div className='Logo' style={{ height }}>\r\n            <Link to='/'>\r\n                <img src={LogoPNG} alt=\"LOGO\" />\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport './NavigationItem.css'\r\n\r\nexport const NavigationItem = ({ children, link, itemStyle }) => {\r\n    return (\r\n        <li className='NavigationItem'>\r\n            <NavLink\r\n                to={link}\r\n                exact\r\n            >\r\n                {children}\r\n            </NavLink>\r\n        </li>\r\n    );\r\n};\r\n\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nexport const NavigationItems = (props) => {\r\n    return (\r\n        <ul className='NavigationItems'>\r\n            <NavigationItem link='https://sabbaghh.github.io/Burgerzz/' itemStyle>\r\n                BurgerBuilder\r\n            </NavigationItem>\r\n            <NavigationItem link='https://sabbaghh.github.io/Burgerzz/orders' >\r\n                Orders\r\n            </NavigationItem>\r\n            <NavigationItem link='/Auth' >\r\n                Login\r\n            </NavigationItem>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport './BackDrop.css'\r\n\r\nconst BackDrop = ({ show, exit }) => {\r\n    if (show) {\r\n        return (\r\n            <div className=\"BackDrop\"\r\n                onClick={() => exit()}>\r\n            </div>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default BackDrop;","import React, { Fragment } from 'react';\r\nimport './SliderDrawer.css'\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport BackDrop from '../../UI/Backdrop/Backdrop';\r\n\r\nexport const SideDrawer = ({ closed, show }) => {\r\n    let SideDrawerStyle = show ? 'Open' : 'Close';\r\n    return (\r\n        <Fragment>\r\n            <BackDrop\r\n                show={show}\r\n                exit={closed} />\r\n\r\n            <div className={`SideDrawer ${SideDrawerStyle}`}>\r\n                <Logo height={'11%'} />\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default SideDrawer;","import React from 'react';\r\nimport './SideDrawerToggle.css';\r\n\r\nexport const SideDrawerToggle = ({ toggle }) => {\r\n    return (\r\n        <div onClick={toggle} className='DrawerToggle'>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideDrawerToggle;","import React from 'react';\r\nimport './ToolBar.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigtionItems from '../NavigationItems/NavigationItems';\r\nimport SideDrawerToggle from '../SideDrawer/SideDrawerToggle/SideDrawerToggle';\r\n\r\nconst Toolabr = ({ show }) => {\r\n    return (\r\n        <header className='ToolBar'>\r\n            <SideDrawerToggle toggle={show} />\r\n            <Logo height={'80%'} />\r\n            <nav className='DesktopOnly'>\r\n                <NavigtionItems />\r\n            </nav>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Toolabr;","import React, { Component, Fragment } from 'react'\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\nimport './Layout.css';\r\n//\r\nimport ToolBar from '../Navigation/ToolBar/ToolBar'\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    hideSideDrawer = () => {\r\n        this.setState({ showSideDrawer: false })\r\n    }\r\n    showSideDrawer = () => {\r\n        this.setState({ showSideDrawer: true })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <ToolBar show={this.showSideDrawer} />\r\n                <SideDrawer\r\n                    closed={this.hideSideDrawer}\r\n                    show={this.state.showSideDrawer} />\r\n                <main className='content'>\r\n                    {this.props.children}\r\n                </main>\r\n            </Fragment >\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Layout;","import React from 'react';\r\nimport './BurgerInGredient.css';\r\n\r\nconst BurgerInGredient = (props) => {\r\n\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case 'BREAD_BOTTOM':\r\n            ingredient = <div className='BreadBottom'></div>;\r\n            break;\r\n        case 'BREAD_TOP':\r\n            ingredient = (\r\n                <div className=\"BreadTop\">\r\n                    <div className=\"Seeds1\"></div>\r\n                    <div className=\"Seeds2\"></div>\r\n                </div>);\r\n            break;\r\n        case 'MEAT':\r\n            ingredient = <div className='Meat'></div>;\r\n            break;\r\n        case 'CHEESE':\r\n            ingredient = <div className='Cheese'></div>\r\n            break;\r\n        case 'SALAD':\r\n            ingredient = <div className=\"Salad\"></div>;\r\n            break;\r\n        case 'BACON':\r\n            ingredient = <div className=\"Bacon\"></div>\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n\r\n    return ingredient;\r\n}\r\n\r\nexport default BurgerInGredient;\r\n","import React from 'react';\r\nimport BurgerInGredient from './BurgerInGredient/BrugerInGredient';\r\nimport './Burger.css';\r\n\r\n\r\nconst Burger = (props) => {\r\n\r\n    let Slices = Object.keys(props.ingredient)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredient[igKey])].map((_, i) => {\r\n                return <BurgerInGredient key={igKey + i} type={igKey} />;\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n\r\n    if (Slices.length === 0) Slices = <p>please Start Adding Ingredient</p>;\r\n\r\n    return (\r\n        <div className='burger'>\r\n            <BurgerInGredient type='BREAD_TOP' />\r\n            {Slices}\r\n            <BurgerInGredient type='BREAD_BOTTOM' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Burger;","import React from 'react';\r\nimport './BuildControl.css';\r\n\r\nconst BuildControl = ({ Label, type, add, remove, disabled, count }) => {\r\n    return (\r\n        <div className='BuildControl'>\r\n            <button\r\n                disabled={disabled}\r\n                className='Less'\r\n                onClick={remove}>\r\n                Less\r\n            </button>\r\n            <div className='Label'>\r\n                {Label} : {count}\r\n            </div>\r\n            <button\r\n                className='More'\r\n                onClick={add}>\r\n                More\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BuildControl;","import React from 'react';\r\nimport './BuildControls.css'\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { Label: 'Salad', type: 'SALAD' },\r\n    { Label: 'Cheese', type: 'CHEESE' },\r\n    { Label: 'Bacon', type: 'BACON' },\r\n    { Label: 'Meat', type: 'MEAT' }\r\n]\r\n\r\nconst BuildControls = ({ addIngredient, removeIngredient,\r\n    disabledButtons, price, ingredientCount, purchase, purchasableHandler }) => {\r\n\r\n    const renderControl = controls.map(({ type, Label }) => {\r\n        return <BuildControl\r\n            key={Label}\r\n            type={type}\r\n            Label={Label}\r\n            add={() => addIngredient(type)}\r\n            remove={() => removeIngredient(type)}\r\n            disabled={disabledButtons[type]}\r\n            count={ingredientCount[type]} />\r\n    })\r\n\r\n\r\n    return (\r\n        <div className='buildControls' >\r\n            <h3>  Total Price : {price.toFixed(2)} </h3>\r\n            { renderControl}\r\n            <button className='OrderButton'\r\n                disabled={!purchase}\r\n                onClick={() => purchasableHandler(purchase)}\r\n            > ORDER NOW</button>\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default BuildControls;","import React, { Fragment } from 'react';\r\nimport './Modal.css'\r\nimport BackDrop from '../Backdrop/Backdrop'\r\n\r\nconst Modal = ({ children, show, exit }) => {\r\n    const showing = { transform: \"translateY(0)\", opacity: 1 }\r\n    const Hiding = { transform: \"translateY(-100vh)\", opacity: 0 }\r\n    return (\r\n        <Fragment>\r\n            <BackDrop show={show} exit={exit} />\r\n            <div\r\n                className='Modal'\r\n                style={show ? showing : Hiding}\r\n            >\r\n                {children}\r\n            </div>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Btutton.css'\r\n\r\nconst Button = ({ value, callBackFunction, btnStyle, disabled }) => {\r\n    let Style = `Button ${btnStyle}`;\r\n    return (\r\n        <button\r\n            disabled={disabled}\r\n            onClick={callBackFunction}\r\n            className={Style}\r\n        > {value} </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React, { Fragment } from 'react';\r\nimport Button from '../../UI/Button/Button'\r\n\r\nconst OrderSummary = ({ ingredients, exit, price, continues }) => {\r\n\r\n    const ingredientsSammary = Object.keys(ingredients).map((el, index) => {\r\n        return (\r\n            <li key={index}>\r\n                <p>{el} : {ingredients[el]}</p>\r\n            </li>\r\n        )\r\n        // console.log(el);\r\n    })\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <h3>Your Order</h3>\r\n            <p>You've ordered our delecious burger with the following ingredients</p>\r\n            <ul>\r\n                {ingredientsSammary}\r\n            </ul>\r\n            <h3> Total Price : {price.toFixed(2)} </h3>\r\n            <p>Continue to Checkout?</p>\r\n            <div>\r\n                <Button value='CANCEl' callBackFunction={exit} btnStyle='Danger' />\r\n                <Button value='CONTINUE' callBackFunction={continues} btnStyle='Success' />\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nexport const Spinner = (props) => {\r\n    return (\r\n        <div className=\"loader\">Loading...</div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://burgerzz-f2ec7.firebaseio.com/'\r\n})","import * as actionTypes from './actionType';\r\nimport axios from '../../Database/axios-orders'\r\n\r\nexport const addIngredient = (IngredientsName) => ({ type: actionTypes.ADD_INGREDIENT, IngredientsName });\r\nexport const removeIIngredient = (IngredientsName) => ({ type: actionTypes.REMOVE_INGREDIENT, IngredientsName });\r\n\r\n//http request\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredient.json')\r\n            .then((res) => dispatch(setIngredients(res.data)))\r\n            .catch((err) => console.log(err))\r\n    }\r\n}\r\n//initialise ingredients\r\nexport const setIngredients = (ingredients) => ({ type: actionTypes.SET_INGREDIENT, ingredients });","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENT = 'SET_INGREDIENT';\r\nexport const FETCH_ORDER = 'FETCH_ORDER';\r\nexport const PURCHACE_BURGER_START = 'PURCHACE_BURGER_START';\r\nexport const GET_ORDERS = 'GET_ORDERS';\r\nexport const IS_GETTING_ORDERS = 'IS_GETTING_ORDERS';\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';","import React, { Component, Fragment } from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { withRouter } from 'react-router-dom';\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport * as builderBurgerActions from '../../store/actions/burgerBuilder'\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = { purchasable: false, loading: false };\r\n\r\n    componentDidMount() { this.props.initIngredients(); };\r\n\r\n    editPurchase = (ing) => {\r\n        let ingredientsValueSum = 0;\r\n        Object.values({ ...ing }).map(el => (ingredientsValueSum += el));\r\n        return ingredientsValueSum > 0;\r\n    };\r\n\r\n    purchasableHandler = () => this.setState({ purchasable: true });\r\n\r\n    purchasableCancel = () => this.setState({ purchasable: false });\r\n\r\n    purchasableContinue = () => this.props.history.push({ pathname: 'https://sabbaghh.github.io/Burgerzz/checkout' });\r\n\r\n    render() {\r\n        const ingredientValuesButtons = { ...this.props.ingredients };\r\n        for (let i in ingredientValuesButtons) ingredientValuesButtons[i] = ingredientValuesButtons[i] <= 0\r\n\r\n        let OrderSummarys = null;\r\n        let burger = <Spinner />\r\n        if (this.props.ingredients) {\r\n            burger = (\r\n                <Fragment>\r\n                    <Burger ingredient={this.props.ingredients} />\r\n                    <BuildControls\r\n                        addIngredient={this.props.AddIngredient}\r\n                        removeIngredient={this.props.removeIngredient}\r\n                        disabledButtons={ingredientValuesButtons}\r\n                        price={this.props.TotalPrice}\r\n                        ingredientCount={this.props.ingredients}\r\n                        purchase={this.editPurchase(this.props.ingredients)}\r\n                        purchasableHandler={this.purchasableHandler} />\r\n                </Fragment>\r\n            );\r\n            OrderSummarys = (\r\n                <OrderSummary\r\n                    ingredients={this.props.ingredients}\r\n                    exit={this.purchasableCancel}\r\n                    price={this.props.TotalPrice}\r\n                    continues={this.purchasableContinue}\r\n                />\r\n            );\r\n        }\r\n        if (this.state.loading) { OrderSummarys = <Spinner />; }\r\n        return (\r\n            <Fragment>\r\n                <Modal show={this.state.purchasable}\r\n                    exit={this.purchasableCancel}>\r\n                    {OrderSummarys}\r\n                </Modal>\r\n                {burger}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n//redux axtions\r\nconst mapStateToProps = state => (\r\n    {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        TotalPrice: state.burgerBuilder.TotalPrice\r\n    }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n    {\r\n        AddIngredient: (IngredientsName) =>\r\n            dispatch(builderBurgerActions.addIngredient(IngredientsName)),\r\n\r\n        removeIngredient: (IngredientsName) =>\r\n            dispatch(builderBurgerActions.removeIIngredient(IngredientsName)),\r\n\r\n        initIngredients: () => dispatch(builderBurgerActions.initIngredients())\r\n    }\r\n)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(BurgerBuilder));","import React from 'react';\r\nimport './Order.css';\r\nimport { Redirect } from 'react-router-dom'\r\nexport const Order = ({ price, ingredients }) => {\r\n    if (!ingredients) {\r\n        return <Redirect to='/orders' />\r\n    }\r\n    const renderIngredients = Object.keys(ingredients).map(ing => {\r\n        return <h4 key={ing}> ({ing} : {ingredients[ing]}) </h4>\r\n    })\r\n\r\n    return (\r\n        <div className='Order'>\r\n            <div className='Ingredients'>\r\n                <h3>INGREDIENTS : </h3>\r\n                {ingredients ? renderIngredients : null}\r\n            </div>\r\n            <p>Price : {price} </p>\r\n        </div>\r\n    );\r\n};\r\nexport default Order;","import { FETCH_ORDER, PURCHACE_BURGER_START, GET_ORDERS, IS_GETTING_ORDERS } from './actionType';\r\nimport axios from '../../Database/axios-orders';\r\n\r\nexport const fetchOrder = (order, history) => {\r\n    return (dispatch) => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('orders.json', order)\r\n            .then((res) => {\r\n                dispatch(fetchOrderSuccess(res.data.name, order))\r\n                history.push('/')\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n};\r\nexport const purchaseBurgerStart = () => ({ type: PURCHACE_BURGER_START });\r\nconst fetchOrderSuccess = (id, order) => ({ type: FETCH_ORDER, orders: { id, order } });\r\n\r\n//orders\r\nexport const getOrdersFormDatabase = () => {\r\n    return dispatch => {\r\n        dispatch(isGettingOrders())\r\n        axios.get('orders.json')\r\n            .then(res => dispatch(getOrdersToComponent(res.data)))\r\n            .catch(err => dispatch(isGettingOrders()))\r\n    }\r\n};\r\nconst getOrdersToComponent = (data) => ({ type: GET_ORDERS, order: data });\r\nconst isGettingOrders = () => ({ type: IS_GETTING_ORDERS });\r\n\r\n\r\n\r\n\r\n","import React, { Component, Fragment } from 'react';\r\n//components\r\nimport Order from '../../components/Order/Order'\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { getOrdersFormDatabase } from '../../store/actions/order'\r\n\r\nexport class Orders extends Component {\r\n    componentDidMount() {\r\n        this.props.getOrders()\r\n    }\r\n\r\n    render() {\r\n        let renderOrders = <Spinner />\r\n        if (!this.props.loading) {\r\n            renderOrders = (\r\n                this.props.orders.map(key => {\r\n                    return <Order\r\n                        key={key.id}\r\n                        ingredients={key.ingredients}\r\n                        price={key.TotalPrice}\r\n                    />\r\n                })\r\n            )\r\n        }\r\n        return (\r\n            <Fragment>\r\n                {renderOrders}\r\n            </Fragment>\r\n        );\r\n    };\r\n};\r\n\r\n//redux connections\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.order.loading,\r\n        orders: state.order.orders\r\n    }\r\n}\r\n\r\nconst dispatchToProps = (dispatch) => {\r\n    return { getOrders: () => dispatch(getOrdersFormDatabase()) }\r\n}\r\n\r\nexport default connect(mapStateToProps, dispatchToProps)(Orders);","import React from 'react';\r\nimport './CheckOutSummary.css'\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\n\r\nconst CheckOutSummary = ({ ingredient, history }) => {\r\n    //check if the ingredient is empty\r\n    Object.size = (obj) => {\r\n        var size = 0, key;\r\n        for (key in obj) {\r\n            if (obj.hasOwnProperty(key)) size++;\r\n        }\r\n        return size;\r\n    };\r\n\r\n    const ButtonContinue = (\r\n        <Button\r\n            value='CONTINUE'\r\n            callBackFunction={() => history.push('https://sabbaghh.github.io/Burgerzz/checkout/contact-data')}\r\n            btnStyle='Success' />\r\n    )\r\n\r\n    return (\r\n        <div className='CheckoutSummary'>\r\n            <h1> we hope it tasts well</h1>\r\n            <div style={{ width: '100%', margin: 'auto' }}>\r\n                <Burger ingredient={ingredient} />\r\n            </div>\r\n            <Button\r\n                value='CANCEL'\r\n                callBackFunction={() => history.push('/')}\r\n                btnStyle='Danger' />\r\n            {Object.size(ingredient) !== 0 ? ButtonContinue : null}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CheckOutSummary;","import React from 'react';\r\nimport './Input.css'\r\nexport const input = (props) => {\r\n    //check validation\r\n    const inputClass = ['inputElement']\r\n    if (props.inValid && props.isTouched) {\r\n        inputClass.push('invalid')\r\n    }\r\n\r\n    //rendering inputs\r\n    let inputElement = null;\r\n    switch (props.elemntType) {\r\n        case 'input':\r\n            inputElement = <input\r\n                name={props.name}\r\n                className={inputClass.join(' ')}\r\n                {...props.elemntConfig}\r\n                value={props.value}\r\n                onChange={(e) => props.callBackFunction(e, props.name)}\r\n            />\r\n\r\n\r\n            break;\r\n        case 'textarea':\r\n            inputElement = <textarea\r\n                name={props.name}\r\n                className={inputClass}\r\n                {...props.elemntConfig}\r\n                value={props.value()}\r\n            />\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                name={props.name}\r\n                className={inputClass}\r\n                {...props.elemntConfig}\r\n                value={props.value} />\r\n    }\r\n\r\n    return (\r\n        <div className='Input'>\r\n            <label className='Label'> {props.Label} </label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\nexport default input;","import React, { Component } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Input from '../../../components/UI/Input/input';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport * as orderActions from '../../../store/actions/order'\r\nimport './ContactData.css';\r\n\r\nexport class ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elemntType: 'input',\r\n                elemntConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLenght: 5,\r\n                    maxLenght: 20\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elemntType: 'input',\r\n                elemntConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLenght: 5,\r\n                    maxLenght: 20\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elemntType: 'input',\r\n                elemntConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLenght: 5,\r\n                    maxLenght: 20\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elemntType: 'input',\r\n                elemntConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLenght: 5,\r\n                    maxLenght: 20\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        valid: false\r\n    }\r\n\r\n    formHandler = (e) => {\r\n        e.preventDefault();\r\n        //implent formData to send them\r\n        let formData = {};\r\n        for (let values in this.state.orderForm) formData[values] = this.state.orderForm[values].value;\r\n        //implementing the order that u wanna fetch\r\n        const order = ({\r\n            ingredients: this.props.ingredients,\r\n            TotalPrice: this.props.TotalPrice,\r\n            formData\r\n        });\r\n        //axios\r\n        this.props.fetchOrder(order, this.props.history);\r\n    }\r\n\r\n    checkValidation = (value, rules) => {\r\n        let isValid = true;\r\n        if (rules.required) isValid = value.trim() !== '' && isValid;\r\n        if (rules.minLenght) isValid = value.length >= rules.minLenght && isValid;\r\n        return isValid;\r\n    }\r\n\r\n    inputHandler = (e, name) => {\r\n        //store the value\r\n        let value = e.target.value;\r\n        //clone objects inside the orderFrom state\r\n        let specificObj = { ...this.state.orderForm[name] };\r\n        //updating the cloned objects with the new value\r\n        specificObj['value'] = value;\r\n        //check if its touched\r\n        specificObj['touched'] = true;\r\n        //checking validation and updating valid \r\n        specificObj.valid = this.checkValidation(value, specificObj['validation']);\r\n        // clone the main orderFrom from state\r\n        let mainObj = { ...this.state.orderForm };\r\n        //update the orderForm clone\r\n        mainObj[name] = specificObj;\r\n        //update the valid Form \r\n        let valid = true;\r\n        for (let i in mainObj) {\r\n            valid = valid && mainObj[i].valid\r\n        }\r\n        this.setState({ orderForm: mainObj, valid })\r\n    }\r\n\r\n    render() {\r\n        const renderInputs = Object.keys(this.state.orderForm).map((key, index) => {\r\n            return <Input\r\n                Label={key} key={index} name={key}\r\n                elemntType={this.state.orderForm[key].elemntType}\r\n                elemntConfig={this.state.orderForm[key].elemntConfig}\r\n                value={this.state.orderForm[key].value}\r\n                callBackFunction={this.inputHandler}\r\n                inValid={!this.state.orderForm[key].valid}\r\n                isTouched={this.state.orderForm[key].touched}\r\n            />\r\n        })\r\n\r\n        return (\r\n            <div className='ContactData' >\r\n                <h4> PLEASE ENTER YOU CONTACT DATA</h4>\r\n                <form onSubmit={this.formHandler}>\r\n                    {renderInputs}\r\n                    <Button\r\n                        disabled={!this.state.valid}\r\n                        btnStyle='Success'\r\n                        value='CONFIRM'\r\n                    />\r\n                </form>\r\n            </div >\r\n        );\r\n    };\r\n};\r\nconst mapstatetopProps = state => (\r\n    {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        TotalPrice: state.burgerBuilder.TotalPrice,\r\n        loading: state.order.loading\r\n    }\r\n)\r\n\r\nconst dispatchToProps = (dispatch) => (\r\n    {\r\n        fetchOrder: (order, history) => dispatch(orderActions.fetchOrder(order, history))\r\n    }\r\n)\r\n\r\n\r\nexport default connect(mapstatetopProps, dispatchToProps)(withRouter(ContactData));","import React, { Component, Fragment } from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckOutSummary'\r\nimport { withRouter, Route } from 'react-router-dom';\r\nimport ConactData from './ContactData/ContactData';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nexport class CheckOut extends Component {\r\n    render() {\r\n        let checkOutSummary = (\r\n            <CheckoutSummary\r\n                history={this.props.history}\r\n                ingredient={this.props.ingredients} />\r\n        );\r\n        if (!this.props.ingredients) {\r\n            checkOutSummary = <Spinner />;\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                {checkOutSummary}\r\n                <Route path={`${this.props.match.path}/contact-data`}>\r\n                    <ConactData />\r\n                </Route>\r\n            </Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    TotalPrice: state.burgerBuilder.TotalPrice\r\n})\r\n\r\nexport default connect(mapStateToProps)(withRouter(CheckOut));","import React, { Component } from 'react';\r\nimport Input from '../../components/UI/Input/input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport './Auth.css'\r\nimport { connect } from 'react-redux';\r\n//actions \r\nimport { auth } from '../../store/actions/AuthActions';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        orderForm: {\r\n            email: {\r\n                elemntType: 'input',\r\n                elemntConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Mail address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmal: true,\r\n                    minLenght: 5,\r\n                    maxLenght: 20\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elemntType: 'input',\r\n                elemntConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLenght: 7,\r\n                    maxLenght: 20\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        }\r\n    }\r\n    checkValidation = (value, rules) => {\r\n        let isValid = true;\r\n        if (rules.required) isValid = value.trim() !== '' && isValid;\r\n        if (rules.minLenght) isValid = value.length >= rules.minLenght && isValid;\r\n        return isValid;\r\n    }\r\n\r\n    inputHandler = (e, name) => {\r\n        const updatecontrols = {\r\n            ...this.state.orderForm,\r\n            [name]: {\r\n                ...this.state.orderForm[name],\r\n                value: e.target.value,\r\n                valid: this.checkValidation(e.target.value, this.state.orderForm[name].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState({ orderForm: updatecontrols });\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n        this.props.onAuth(this.state.orderForm.email.value, this.state.orderForm.password.value)\r\n\r\n    }\r\n    render() {\r\n        const renderInputs = Object.keys(this.state.orderForm).map((key, index) => {\r\n            return <Input\r\n                Label={key} key={index} name={key}\r\n                elemntType={this.state.orderForm[key].elemntType}\r\n                elemntConfig={this.state.orderForm[key].elemntConfig}\r\n                value={this.state.orderForm[key].value}\r\n                callBackFunction={this.inputHandler}\r\n                inValid={!this.state.orderForm[key].valid}\r\n                isTouched={this.state.orderForm[key].touched}\r\n            />\r\n        })\r\n\r\n        return (\r\n            <div className='auth'>\r\n                <form onSubmit={(e) => this.submitHandler(e)} >\r\n                    {renderInputs}\r\n                    <Button btnStyle='Success' value='LOGIN' />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAuth: (email, PWD) => dispatch(auth(email, PWD))\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth);","import * as actionTypes from './actionType';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n};\r\n\r\nexport const authSuccess = (authData) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        authData\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error\r\n    }\r\n}\r\n\r\nexport const auth = (email, PWD) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n    }\r\n}","import React from 'react';\r\nimport Layout from './components/layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\r\nimport Orders from './containers/Orders/Orders';\r\nimport CheckOut from './containers/CheckOut/CheckOut'\r\nimport Auth from './containers/Auth/Auth'\r\nimport { Route } from 'react-router-dom';\r\n//test remote orgin\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout >\r\n        <Route path=\"/\" exact >\r\n          <BurgerBuilder />\r\n        </Route>\r\n        <Route path=\"https://sabbaghh.github.io/Burgerzz/checkout\">\r\n          <CheckOut />\r\n        </Route>\r\n        <Route path=\"https://sabbaghh.github.io/Burgerzz/orders\">\r\n          <Orders />\r\n        </Route>\r\n        <Route path=\"https://sabbaghh.github.io/Burgerzz/Auth\">\r\n          <Auth />\r\n        </Route>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import * as actionTypes from '../actions/actionType'\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    TotalPrice: 4\r\n}\r\n\r\nconst INGREDIENT_PRICE = {\r\n    SALAD: 0.5,\r\n    CHEESE: 0.2,\r\n    MEAT: 1.3,\r\n    BACON: 0.7\r\n}\r\n\r\nconst burgerBuilder = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.IngredientsName]: state.ingredients[action.IngredientsName] + 1\r\n                },\r\n                TotalPrice: state.TotalPrice + INGREDIENT_PRICE[action.IngredientsName],\r\n            }\r\n\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.IngredientsName]: state.ingredients[action.IngredientsName] - 1\r\n                },\r\n                TotalPrice: state.TotalPrice - INGREDIENT_PRICE[action.IngredientsName]\r\n            }\r\n\r\n        case actionTypes.SET_INGREDIENT:\r\n            return { ...state, ingredients: action.ingredients, TotalPrice: initialState.TotalPrice }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n};\r\nexport default burgerBuilder;","import * as actionTypes from '../actions/actionType'\r\n\r\nconst initialState = { orders: [], loading: false }\r\n\r\nconst makeOrderToarray = (order) => {\r\n    let orderArray = []\r\n    Object.keys(order).map(key => {\r\n        orderArray.push({ ...order[key], id: key });\r\n        return null;\r\n    });\r\n    return orderArray;\r\n};\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_ORDER:\r\n            return { ...state, orders: state.orders.concat(action.orders), loading: false }\r\n        case actionTypes.PURCHACE_BURGER_START:\r\n            return { ...state, loading: true }\r\n        case actionTypes.GET_ORDERS:\r\n            return { ...state, orders: makeOrderToarray(action.order), loading: false }\r\n        case actionTypes.IS_GETTING_ORDERS:\r\n            return { ...state, loading: true }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default orderReducer;","import burgerBuilder from './burgerBuilder';\r\nimport orderReducer from './order'\r\nimport { combineReducers } from 'redux'\r\n\r\nexport default combineReducers({ burgerBuilder, order: orderReducer })","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './store/reducer/reducer'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}